/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.AdminController;
import Model.Exam;
import Model.MultiChoiceQuestion;
import Model.User;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.MediaTracker;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import lib.XFile;

/**
 *
 * @author PC
 */
public class Admin extends javax.swing.JFrame {
    Integer curRowQues;
    Integer curRowExam;
    Integer curRowInStorage;
    Integer curRowInExam;
    CardLayout cardLayout;  
    Login loginView;
    AdminController controller;
    String imagePath = "";
    DefaultTableModel tbModelQues;
    DefaultTableModel tbModelExam;
    DefaultTableModel tbModelInStorage;
    DefaultTableModel tbModelInExam;
    
    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        initView();
        lbWelcome.setText("Welcome, Guest");
    }
    
    public Admin (User user, Login aThis){
        initComponents();
        initView();
        lbWelcome.setText("Welcome, " + user.getUsername());
        loginView = aThis;
    }
    
    private void initView(){
        this.setTitle("Main");
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        
        cardLayout = (CardLayout) Content.getLayout();
        cardLayout.show(Content, "Home");
        curRowQues = -1;
        curRowExam = -1;
        curRowInStorage = -1;
        curRowInExam = -1;
        
        controller = new AdminController();    
        
        initTableQuestion();
        fillToTableQuestion();
        
        initTableExam();
        fillToTableExam();
        
        initTableInStorage();
        fillToTableInStorage();
        
        initTableInExam();
        
        controller.saveFile();
//        setIntegerFormat(txtId, 0, 99999);
    }

//    private void setIntegerFormat(JFormattedTextField formatfield, Integer min, Integer max){
//        NumberFormatter formatter = new NumberFormatter();
//        formatter.setValueClass(Integer.class);
//        formatter.setMinimum(min);
//        formatter.setMaximum(max);
//        formatter.setAllowsInvalid(false);
//        formatter.setCommitsOnValidEdit(true);
//        formatfield.setFormatterFactory(new DefaultFormatterFactory(formatter));
//    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grAnswer = new javax.swing.ButtonGroup();
        MainPanel = new javax.swing.JPanel();
        NavBar = new javax.swing.JPanel();
        lbExit = new javax.swing.JLabel();
        lbHome = new javax.swing.JLabel();
        lbExam = new javax.swing.JLabel();
        lbQuestion = new javax.swing.JLabel();
        Content = new javax.swing.JPanel();
        AddQuestion = new javax.swing.JPanel();
        Body = new javax.swing.JPanel();
        panelAnswer = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ans0 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ans1 = new javax.swing.JTextArea();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ans2 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        ans3 = new javax.swing.JTextArea();
        jRadioButton7 = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        questionPane = new javax.swing.JTextPane();
        btnAddImage = new javax.swing.JButton();
        lbImage = new javax.swing.JLabel();
        Footer = new javax.swing.JPanel();
        btnAddUpdate = new javax.swing.JButton();
        lbQid = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        Home = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbWelcome = new javax.swing.JLabel();
        Exam = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbExam = new javax.swing.JTable();
        pnButtonExam = new javax.swing.JPanel();
        btnCreateExam = new javax.swing.JButton();
        btnAddQuestionToExam = new javax.swing.JButton();
        btnRemoveQuestionInExam = new javax.swing.JButton();
        btnDelExam = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbInExam = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbInStorage = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Question = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbQuestion = new javax.swing.JTable();
        pnButtonQuestion = new javax.swing.JPanel();
        btnAddQues = new javax.swing.JButton();
        btnEditQues = new javax.swing.JButton();
        btnDelQues = new javax.swing.JButton();
        btnDelQuesAbs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPanel.setLayout(new javax.swing.BoxLayout(MainPanel, javax.swing.BoxLayout.X_AXIS));

        NavBar.setBackground(new java.awt.Color(10, 77, 104));
        NavBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NavBar.setMinimumSize(new java.awt.Dimension(150, 400));

        lbExit.setBackground(new java.awt.Color(237, 198, 177));
        lbExit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logout.png"))); // NOI18N
        lbExit.setText("Exit");
        lbExit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbExit.setOpaque(true);
        lbExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbExitMousePressed(evt);
            }
        });

        lbHome.setBackground(new java.awt.Color(8, 131, 149));
        lbHome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home.png"))); // NOI18N
        lbHome.setText("HOME");
        lbHome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lbHome.setOpaque(true);
        lbHome.setPreferredSize(new java.awt.Dimension(100, 100));
        lbHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbHomeMousePressed(evt);
            }
        });

        lbExam.setBackground(new java.awt.Color(0, 255, 202));
        lbExam.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbExam.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exam.png"))); // NOI18N
        lbExam.setText("EXAM");
        lbExam.setOpaque(true);
        lbExam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbExamMousePressed(evt);
            }
        });

        lbQuestion.setBackground(new java.awt.Color(145, 127, 179));
        lbQuestion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbQuestion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/error.png"))); // NOI18N
        lbQuestion.setText("QUESTION");
        lbQuestion.setOpaque(true);
        lbQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbQuestionMousePressed(evt);
            }
        });

        javax.swing.GroupLayout NavBarLayout = new javax.swing.GroupLayout(NavBar);
        NavBar.setLayout(NavBarLayout);
        NavBarLayout.setHorizontalGroup(
            NavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbHome, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
            .addComponent(lbExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        NavBarLayout.setVerticalGroup(
            NavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavBarLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbHome, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbExam, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 410, Short.MAX_VALUE)
                .addComponent(lbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MainPanel.add(NavBar);

        Content.setLayout(new java.awt.CardLayout());

        AddQuestion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddQuestion.setPreferredSize(new java.awt.Dimension(450, 400));
        AddQuestion.setLayout(new java.awt.BorderLayout());

        Body.setBackground(new java.awt.Color(204, 255, 255));
        Body.setPreferredSize(new java.awt.Dimension(450, 300));

        panelAnswer.setOpaque(false);

        grAnswer.add(jRadioButton1);
        jRadioButton1.setToolTipText("");
        jRadioButton1.setActionCommand("0");
        jRadioButton1.setPreferredSize(new java.awt.Dimension(3075, 80));

        ans0.setColumns(20);
        ans0.setRows(3);
        jScrollPane1.setViewportView(ans0);
        ans0.getAccessibleContext().setAccessibleName("0");

        ans1.setColumns(20);
        ans1.setRows(3);
        jScrollPane2.setViewportView(ans1);
        ans1.getAccessibleContext().setAccessibleName("1");

        grAnswer.add(jRadioButton5);
        jRadioButton5.setToolTipText("");
        jRadioButton5.setActionCommand("1");
        jRadioButton5.setPreferredSize(new java.awt.Dimension(3075, 80));

        grAnswer.add(jRadioButton6);
        jRadioButton6.setToolTipText("");
        jRadioButton6.setActionCommand("2");
        jRadioButton6.setPreferredSize(new java.awt.Dimension(3075, 80));

        ans2.setColumns(20);
        ans2.setRows(3);
        jScrollPane5.setViewportView(ans2);
        ans2.getAccessibleContext().setAccessibleName("2");

        ans3.setColumns(20);
        ans3.setRows(3);
        jScrollPane6.setViewportView(ans3);
        ans3.getAccessibleContext().setAccessibleName("3");

        grAnswer.add(jRadioButton7);
        jRadioButton7.setToolTipText("");
        jRadioButton7.setActionCommand("3");
        jRadioButton7.setPreferredSize(new java.awt.Dimension(3075, 80));

        javax.swing.GroupLayout panelAnswerLayout = new javax.swing.GroupLayout(panelAnswer);
        panelAnswer.setLayout(panelAnswerLayout);
        panelAnswerLayout.setHorizontalGroup(
            panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAnswerLayout.createSequentialGroup()
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(panelAnswerLayout.createSequentialGroup()
                        .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                    .addGroup(panelAnswerLayout.createSequentialGroup()
                        .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                    .addGroup(panelAnswerLayout.createSequentialGroup()
                        .addComponent(jRadioButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAnswerLayout.setVerticalGroup(
            panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAnswerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jScrollPane3.setViewportView(questionPane);

        btnAddImage.setText("Choose Image (.jpg, .png)");
        btnAddImage.setActionCommand("choose");
        btnAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImageActionPerformed(evt);
            }
        });

        lbImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/image-vector-470-160.png"))); // NOI18N

        javax.swing.GroupLayout BodyLayout = new javax.swing.GroupLayout(Body);
        Body.setLayout(BodyLayout);
        BodyLayout.setHorizontalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelAnswer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        BodyLayout.setVerticalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        AddQuestion.add(Body, java.awt.BorderLayout.CENTER);

        Footer.setBackground(new java.awt.Color(102, 204, 255));
        Footer.setPreferredSize(new java.awt.Dimension(450, 50));

        btnAddUpdate.setText("ADD");
        btnAddUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUpdateActionPerformed(evt);
            }
        });

        lbQid.setText("Question ID:");

        btnReturn.setText("RETURN");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbQid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbQid)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        btnAddUpdate.getAccessibleContext().setAccessibleName("ADDUPDATE");

        AddQuestion.add(Footer, java.awt.BorderLayout.SOUTH);

        Content.add(AddQuestion, "AddQuestion");

        Home.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/administrator.png"))); // NOI18N

        lbWelcome.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lbWelcome.setText("Welcome, ");

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                        .addComponent(lbWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(89, 89, 89))))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(lbWelcome)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        Content.add(Home, "Home");

        tbExam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Question Number"
            }
        ));
        tbExam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbExamMousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tbExam);

        btnCreateExam.setText("Create Exam");
        btnCreateExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateExamActionPerformed(evt);
            }
        });
        pnButtonExam.add(btnCreateExam);

        btnAddQuestionToExam.setText("Add Question");
        btnAddQuestionToExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQuestionToExamActionPerformed(evt);
            }
        });
        pnButtonExam.add(btnAddQuestionToExam);

        btnRemoveQuestionInExam.setText("Remove Question");
        btnRemoveQuestionInExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveQuestionInExamActionPerformed(evt);
            }
        });
        pnButtonExam.add(btnRemoveQuestionInExam);

        btnDelExam.setText("Delete Exam");
        btnDelExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelExamActionPerformed(evt);
            }
        });
        pnButtonExam.add(btnDelExam);

        tbInExam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Qid", "Question"
            }
        ));
        tbInExam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbInExamMousePressed(evt);
            }
        });
        jScrollPane9.setViewportView(tbInExam);

        tbInStorage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Qid", "Question"
            }
        ));
        tbInStorage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbInStorageMousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(tbInStorage);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("In Storage");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("In Exam");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Exam");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/right.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/left.png"))); // NOI18N

        javax.swing.GroupLayout ExamLayout = new javax.swing.GroupLayout(Exam);
        Exam.setLayout(ExamLayout);
        ExamLayout.setHorizontalGroup(
            ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExamLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(75, 75, 75))
            .addGroup(ExamLayout.createSequentialGroup()
                .addGroup(ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExamLayout.createSequentialGroup()
                        .addGroup(ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ExamLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(pnButtonExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ExamLayout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ExamLayout.createSequentialGroup()
                                .addGap(224, 224, 224)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ExamLayout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ExamLayout.setVerticalGroup(
            ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExamLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnButtonExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExamLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExamLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );

        Content.add(Exam, "Exam");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("QUESTION LIST");

        tbQuestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbQuestionMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(tbQuestion);

        btnAddQues.setText("Add new question");
        btnAddQues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQuesActionPerformed(evt);
            }
        });
        pnButtonQuestion.add(btnAddQues);

        btnEditQues.setText("Edit question");
        btnEditQues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditQuesActionPerformed(evt);
            }
        });
        pnButtonQuestion.add(btnEditQues);

        btnDelQues.setText("Safe delete question");
        btnDelQues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelQuesActionPerformed(evt);
            }
        });
        pnButtonQuestion.add(btnDelQues);

        btnDelQuesAbs.setText("Delete question absolute");
        btnDelQuesAbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelQuesAbsActionPerformed(evt);
            }
        });
        pnButtonQuestion.add(btnDelQuesAbs);

        javax.swing.GroupLayout QuestionLayout = new javax.swing.GroupLayout(Question);
        Question.setLayout(QuestionLayout);
        QuestionLayout.setHorizontalGroup(
            QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestionLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(QuestionLayout.createSequentialGroup()
                .addGroup(QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QuestionLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1))
                    .addGroup(QuestionLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(pnButtonQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        QuestionLayout.setVerticalGroup(
            QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnButtonQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        Content.add(Question, "Question");

        MainPanel.add(Content);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbExitMousePressed
        // TODO add your handling code here:
        controller.saveFile();
        if (JOptionPane.showConfirmDialog(this, "Are you sure wannna exit?", "Exit" , JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION)
        System.exit(0);
    }//GEN-LAST:event_lbExitMousePressed

    private void lbHomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomeMousePressed
        // TODO add your handling code here:
        cardLayout.show(Content, "Home");
    }//GEN-LAST:event_lbHomeMousePressed

    private void lbExamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbExamMousePressed
        // TODO add your handling code here:
        cardLayout.show(Content, "Exam");
        fillToTableExam();
        fillToTableInStorage();
    }//GEN-LAST:event_lbExamMousePressed

    private void lbQuestionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbQuestionMousePressed
        // TODO add your handling code here:
        cardLayout.show(Content, "Question");
    }//GEN-LAST:event_lbQuestionMousePressed

    private void initTableQuestion(){
        tbQuestion.setDefaultEditor(Object.class, null);
        String[] columnNames = {"QID", "Question", "Picture"};
        tbModelQues = new DefaultTableModel(columnNames, 0);
        tbQuestion.setModel(tbModelQues);
    }
    
    private void fillToTableQuestion(){
        tbModelQues.setRowCount(0);
        for (MultiChoiceQuestion ques : controller.getQuesList()) {
            Object[] row = new Object[]{ques.getQid(), ques.getQuestion(), ques.getPicture().equals("")?"none":ques.getPicture()};
            tbModelQues.addRow(row);
        }
    }
    
    private void initTableExam(){
        tbExam.setDefaultEditor(Object.class, null);
        String[] columnNames = {"ID", "Question Number"};
        tbModelExam = new DefaultTableModel(columnNames, 0);
        tbExam.setModel(tbModelExam);
    }
    
    private void fillToTableExam(){
        tbModelExam.setRowCount(0);
        for (Exam exam : controller.getExamList()) {
            Object[] row = new Object[]{exam.getId(), exam.getQuestions().size()};
            tbModelExam.addRow(row);
        }
    }
    
    private void initTableInStorage(){
        tbInStorage.setDefaultEditor(Object.class, null);
        String[] columnNames = {"QID", "Question"};
        tbModelInStorage = new DefaultTableModel(columnNames, 0);
        tbInStorage.setModel(tbModelInStorage);
    }
    
    private void fillToTableInStorage(){
        tbModelInStorage.setRowCount(0);
        for (MultiChoiceQuestion ques : controller.getQuesList()) {
            Object[] row = new Object[]{ques.getQid(), ques.getQuestion()};
            tbModelInStorage.addRow(row);
        }
    }

    private void initTableInExam(){
        tbInExam.setDefaultEditor(Object.class, null);
        String[] columnNames = {"QID", "Question"};
        tbModelInExam = new DefaultTableModel(columnNames, 0);
        tbInExam.setModel(tbModelInExam);
        tbModelInExam.setRowCount(0);
    }
    
    private void fillToTableInExam(){
        ArrayList<MultiChoiceQuestion> curExamQuesList = controller.getExamList().get(curRowExam).getQuestions();
        tbModelInExam.setRowCount(0);
        for (MultiChoiceQuestion ques : curExamQuesList) {
            Object[] row = new Object[]{ques.getQid(), ques.getQuestion()};
            tbModelInExam.addRow(row);
        }
    }
    
    private void btnAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImageActionPerformed
        // TODO add your handling code here:
        if (btnAddImage.getActionCommand().equals("choose")){
            JFileChooser fc = new JFileChooser();
            int re = fc.showOpenDialog(this);
            if (re == JFileChooser.APPROVE_OPTION){
                imagePath = fc.getSelectedFile().getPath();
//                System.out.println(imagePath);
                ImageIcon icon = new ImageIcon(new ImageIcon(imagePath).getImage().getScaledInstance(470, 160, Image.SCALE_SMOOTH));
                if (icon.getImageLoadStatus() == MediaTracker.COMPLETE){
                    lbImage.setIcon(icon);
                    btnAddImage.setText("Delete Image");
                    btnAddImage.setActionCommand("delete");
    //                System.out.println(imagePath);
                } else {
                    lbImage.setIcon(new ImageIcon("./src/img/image-vector-470-160.png"));
                    imagePath = "";
                    System.out.println("Load error");
                }
            }  
        } else if (btnAddImage.getActionCommand().equals("delete")){
            lbImage.setIcon(new ImageIcon("./src/img/image-vector-470-160.png"));
            imagePath = "";
            btnAddImage.setText("Choose Image (.jpg, .png)");
            btnAddImage.setActionCommand("choose");
        }
    }//GEN-LAST:event_btnAddImageActionPerformed

    private void btnAddUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUpdateActionPerformed
        // TODO add your handling code here:
        if (btnAddUpdate.getText().equals("ADD")){
            if (txtId.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Id cannot empty");
                return;
            }
            String id = "Q" + txtId.getText();
            if (!controller.checkValidId(id)){
                JOptionPane.showMessageDialog(this, "Id has existed");
                return;
            }        
            if (questionPane.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Question cannot empty");
                return;
            }
            String question = questionPane.getText();

            List<String> ansList = new ArrayList<>();
            if (!ans0.getText().isBlank()) ansList.add(ans0.getText());
            if (!ans1.getText().isBlank()) ansList.add(ans1.getText());
            if (!ans2.getText().isBlank()) ansList.add(ans2.getText());
            if (!ans3.getText().isBlank()) ansList.add(ans3.getText());
            if (ansList.size()<2) {
                JOptionPane.showMessageDialog(this, "Question need at least 2 answer");
                return;
            }
            String[] answer = ansList.toArray(new String[0]);

            if (grAnswer.getSelection() == null){
                JOptionPane.showMessageDialog(this, "Need choose one right answer");
                return;
            }

            int rightAnswer = Integer.parseInt(grAnswer.getSelection().getActionCommand());

            if (checkAnswerIsEmpty(rightAnswer)){
                JOptionPane.showMessageDialog(this, "Right answer cannot empty");
                return;
            }

            int rightAnser = adjustRightAnswer(rightAnswer);

            String imageName = "";
            if (!imagePath.equals("")){
                imageName = "imgaeOf" + id + ".png";
                controller.saveImage(imagePath, imageName);
            }

            MultiChoiceQuestion newQues = new MultiChoiceQuestion(id, question, imageName, rightAnser, answer);

            controller.addQuestion(newQues);
            JOptionPane.showMessageDialog(this, "Add Successfully");
            initAddQuestion();
            
        } else if (btnAddUpdate.getText().equals("UPDATE")){
            
            MultiChoiceQuestion ques = controller.getQuesById(curRowQues);
            
            if (questionPane.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Question cannot empty");
                return;
            }
            
            if ((ans0.getText().isBlank()) || 
                (ans1.getText().isBlank()) ||
                ((ans2.getText().isBlank()) && (ques.getAnswer().length>2)) ||
                ((!ans2.getText().isBlank()) && (ques.getAnswer().length<3)) ||
                ((ans3.getText().isBlank()) && (ques.getAnswer().length>3)) ||
                ((!ans2.getText().isBlank()) && (ques.getAnswer().length<4))
            ){
                JOptionPane.showMessageDialog(this, "Cannot change structure of answer");
                return;
            } 
            
            int rightAnswer = Integer.parseInt(grAnswer.getSelection().getActionCommand());
            
            if (checkAnswerIsEmpty(rightAnswer)){
                JOptionPane.showMessageDialog(this, "Right answer cannot empty");
                return;
            }
            
            if (!controller.getAbsoluteImage(ques.getPicture()).equals(imagePath)){
//                System.out.println("Differ");
//                System.out.println(controller.getAbsoluteImage(ques.getPicture()));
//                System.out.println(imagePath);
                if (!ques.getPicture().isEmpty()) controller.delImage(ques.getPicture());
                String imageName = "";
                if (!imagePath.equals("")){
                    imageName = "imgaeOf" + ques.getQid() + ".png";
                    if (controller.saveImage(imagePath, imageName)){
                        ques.setPicture(imageName);
                    };                   
                }
            }
            ques.setQuestion(questionPane.getText());
            ques.setRightAnswer(rightAnswer);
            
            List<String> ansList = new ArrayList<>();
            if (!ans0.getText().isBlank()) ansList.add(ans0.getText());
            if (!ans1.getText().isBlank()) ansList.add(ans1.getText());
            if (!ans2.getText().isBlank()) ansList.add(ans2.getText());
            if (!ans3.getText().isBlank()) ansList.add(ans3.getText());
            String[] answer = ansList.toArray(new String[0]);
            
            ques.setAnswer(answer);
            
            controller.updateQuesToExam(ques);
            controller.saveFile();
            cardLayout.show(Content, "Question");
            JOptionPane.showMessageDialog(this, "Edit Successfully");
        }
        fillToTableQuestion();
    }//GEN-LAST:event_btnAddUpdateActionPerformed

    private void btnAddQuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQuesActionPerformed
        // TODO add your handling code here:
        cardLayout.show(Content, "AddQuestion");
        initAddQuestion();
    }//GEN-LAST:event_btnAddQuesActionPerformed

    private void btnEditQuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditQuesActionPerformed
        // TODO add your handling code here:
        if (curRowQues == -1){
            JOptionPane.showMessageDialog(this, "Choose one question");
            return;
        }
        cardLayout.show(Content, "AddQuestion");
        fillAddQuestion(curRowQues);
    }//GEN-LAST:event_btnEditQuesActionPerformed

    private void btnDelQuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelQuesActionPerformed
        // TODO add your handling code here:
        if (curRowQues == -1){
            JOptionPane.showMessageDialog(this, "Choose one question");
            return;
        }
        if (JOptionPane.showConfirmDialog(this, 
                "Are you sure want to delete? Safe delete will only remove the question from the storage. This will prevent create new Exams from the question and will not affect existing Exams."
                ,"Delete Confirm",JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION){
            String qid = (String) tbQuestion.getValueAt(curRowQues, 0);
            String delImage = (String) tbQuestion.getValueAt(curRowQues, 2);
            controller.delImage(delImage);
            controller.delQuesByQid(qid);
            curRowQues = -1;
            fillToTableQuestion();
        }
    }//GEN-LAST:event_btnDelQuesActionPerformed

    private void initAddQuestion(){
        lbImage.setIcon(new ImageIcon("./src/img/image-vector-470-160.png"));
        questionPane.setText("");
        grAnswer.clearSelection();
        ans0.setText("");
        ans1.setText("");
        ans2.setText("");
        ans3.setText("");
        txtId.setText("");
        txtId.setEditable(true);
        btnAddUpdate.setText("ADD");
    }
    
    private void fillAddQuestion(Integer index){
        MultiChoiceQuestion ques = controller.getQuesById(index);
        
        if (!ques.getPicture().equals("")){
            imagePath = controller.getAbsoluteImage(ques.getPicture());
//            System.out.println(imagePath);
            ImageIcon icon = new ImageIcon("./src/img/" + ques.getPicture());

            // Get the original image from the ImageIcon
            Image originalImage = icon.getImage();

            // Scale the image to fit within a container
            int maxWidth = questionPane.getWidth()-10; // maximum width of the container
            int maxHeight = 150; // maximum height of the container
            Image scaledImage = originalImage.getScaledInstance(maxWidth, maxHeight, Image.SCALE_SMOOTH);

            if (originalImage.getWidth(panelAnswer)<questionPane.getWidth()-10){
                scaledImage = originalImage;
            }

            // Create a new ImageIcon from the scaled image
            ImageIcon scaledIcon = new ImageIcon(scaledImage);
            lbImage.setIcon(scaledIcon);
            btnAddImage.setText("Delete Image");
            btnAddImage.setActionCommand("delete");
        } else {
            lbImage.setIcon(new ImageIcon("./src/img/image-vector-470-160.png"));
            imagePath = "";
            btnAddImage.setText("Choose Image (.jpg, .png)");
            btnAddImage.setActionCommand("choose");
        }
        questionPane.setText(ques.getQuestion());
        ans0.setText(ques.getAnswer()[0]);
        ans1.setText(ques.getAnswer()[1]);
        if (ques.getAnswer().length>2) ans2.setText(ques.getAnswer()[2]); else ans2.setText("");
        if (ques.getAnswer().length>3) ans3.setText(ques.getAnswer()[3]); else ans3.setText("");
        
//        System.out.println(ques.getQid());
        
        for (Component c: panelAnswer.getComponents()) {
            if (c instanceof JRadioButton){
                JRadioButton btn = (JRadioButton) c;
                if (Integer.parseInt(btn.getActionCommand())==ques.getRightAnswer()){
                    btn.setSelected(true);
                }
            }
        }
        
        txtId.setText(ques.getQid());
        txtId.setEditable(false);
        
        btnAddUpdate.setText("UPDATE");
    }
    
    private void tbQuestionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbQuestionMousePressed
        // TODO add your handling code here:
        curRowQues = tbQuestion.getSelectedRow();
    }//GEN-LAST:event_tbQuestionMousePressed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(Content, "Question");
    }//GEN-LAST:event_btnReturnActionPerformed

    private void tbExamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbExamMousePressed
        // TODO add your handling code here:
        curRowExam = tbExam.getSelectedRow();
        fillToTableInExam();
    }//GEN-LAST:event_tbExamMousePressed

    private void tbInStorageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbInStorageMousePressed
        // TODO add your handling code here:
        curRowInStorage = tbInStorage.getSelectedRow();
    }//GEN-LAST:event_tbInStorageMousePressed

    private void tbInExamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbInExamMousePressed
        // TODO add your handling code here:
        curRowInExam = tbInExam.getSelectedRow();
    }//GEN-LAST:event_tbInExamMousePressed

    private void btnCreateExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateExamActionPerformed
        // TODO add your handling code here:
        if (!controller.createNewExamCode()){
            JOptionPane.showMessageDialog(this, "There are not enough questions in storage to create a new Exam.");
            return;
        }
        fillToTableExam();
    }//GEN-LAST:event_btnCreateExamActionPerformed

    private void btnAddQuestionToExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQuestionToExamActionPerformed
        // TODO add your handling code here:
        if (curRowExam <0){
            JOptionPane.showMessageDialog(this, "Please choose Exam");
            return;
        }
        if (curRowInStorage <0){
            JOptionPane.showMessageDialog(this, "Please choose Question In Storage");
            return;
        }
        if (!controller.addQuesToExam(curRowExam,curRowInStorage)){
            JOptionPane.showMessageDialog(this, "Question have existed in Exam");
            return;
        }
        fillToTableExam();
        fillToTableInExam();
    }//GEN-LAST:event_btnAddQuestionToExamActionPerformed

    private void btnRemoveQuestionInExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveQuestionInExamActionPerformed
        // TODO add your handling code here:
        if (curRowExam <0){
            JOptionPane.showMessageDialog(this, "Please choose Exam");
            return;
        }
        if (curRowInExam <0){
            JOptionPane.showMessageDialog(this, "Please choose Question In Exam");
            return;
        }
        if (!controller.delQuesFromExam(curRowExam,curRowInExam)){
            JOptionPane.showMessageDialog(this, "Question have existed in Exam");
            return;
        }
        fillToTableExam();
        fillToTableInExam();
    }//GEN-LAST:event_btnRemoveQuestionInExamActionPerformed

    private void btnDelExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelExamActionPerformed
        // TODO add your handling code here:
        if (curRowExam<0){
            JOptionPane.showMessageDialog(this, "Please choose Exam");
            return;
        }
        controller.deleteExamCode(curRowExam);
        fillToTableExam();
    }//GEN-LAST:event_btnDelExamActionPerformed

    private void btnDelQuesAbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelQuesAbsActionPerformed
        // TODO add your handling code here:
        if (curRowQues == -1){
            JOptionPane.showMessageDialog(this, "Choose one question");
            return;
        }
        if (JOptionPane.showConfirmDialog(this, 
                "Are you sure want to delete? Delete absolute will completely remove the question from the storage as well as in the Exams. This can lead to empty Exams."
                ,"Delete Confirm",JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION){
            String qid = (String) tbQuestion.getValueAt(curRowQues, 0);
            String delImage = (String) tbQuestion.getValueAt(curRowQues, 2);
            controller.delImage(delImage);
            controller.delQuesAbsByQid(qid);
            curRowQues = -1;
            fillToTableQuestion();
        }
    }//GEN-LAST:event_btnDelQuesAbsActionPerformed

    private boolean checkAnswerIsEmpty(int answer){
        if (answer == 0){
            return ans0.getText().equals("");
        }
        if (answer == 1){
            return ans1.getText().equals("");
        }
        if (answer == 2){
            return ans2.getText().equals("");
        }
        if (answer == 3){
            return ans3.getText().equals("");
        }
        return true;
    }
    
    public Integer adjustRightAnswer(int rightAnswer){
        int adjustAnswer = rightAnswer;
        if (rightAnswer == 1){
            if (ans0.getText().equals("")) adjustAnswer--;
        }
        if (rightAnswer == 2){
            if (ans0.getText().equals("")) adjustAnswer--;
            if (ans1.getText().equals("")) adjustAnswer--;
        }
        if (rightAnswer == 3){
            adjustAnswer = 3;
            if (ans0.getText().equals("")) adjustAnswer--;
            if (ans1.getText().equals("")) adjustAnswer--;
            if (ans2.getText().equals("")) adjustAnswer--;
        }
        return adjustAnswer;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddQuestion;
    private javax.swing.JPanel Body;
    private javax.swing.JPanel Content;
    private javax.swing.JPanel Exam;
    private javax.swing.JPanel Footer;
    private javax.swing.JPanel Home;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel NavBar;
    private javax.swing.JPanel Question;
    private javax.swing.JTextArea ans0;
    private javax.swing.JTextArea ans1;
    private javax.swing.JTextArea ans2;
    private javax.swing.JTextArea ans3;
    private javax.swing.JButton btnAddImage;
    private javax.swing.JButton btnAddQues;
    private javax.swing.JButton btnAddQuestionToExam;
    private javax.swing.JButton btnAddUpdate;
    private javax.swing.JButton btnCreateExam;
    private javax.swing.JButton btnDelExam;
    private javax.swing.JButton btnDelQues;
    private javax.swing.JButton btnDelQuesAbs;
    private javax.swing.JButton btnEditQues;
    private javax.swing.JButton btnRemoveQuestionInExam;
    private javax.swing.JButton btnReturn;
    private javax.swing.ButtonGroup grAnswer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lbExam;
    private javax.swing.JLabel lbExit;
    private javax.swing.JLabel lbHome;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbQid;
    private javax.swing.JLabel lbQuestion;
    private javax.swing.JLabel lbWelcome;
    private javax.swing.JPanel panelAnswer;
    private javax.swing.JPanel pnButtonExam;
    private javax.swing.JPanel pnButtonQuestion;
    private javax.swing.JTextPane questionPane;
    private javax.swing.JTable tbExam;
    private javax.swing.JTable tbInExam;
    private javax.swing.JTable tbInStorage;
    private javax.swing.JTable tbQuestion;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
